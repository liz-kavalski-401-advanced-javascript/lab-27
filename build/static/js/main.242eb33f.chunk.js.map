{"version":3,"sources":["components/header/header.js","components/footer/footer.js","components/counter/counter.js","app.js","index.js"],"names":["Header","React","Component","Footer","Counter","props","handleUp","e","count","state","updateCounter","handleDown","polarity","this","setState","classes","join","className","href","onClick","App","Fragment","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"8MAYeA,E,iLARX,OACE,gCACE,mD,GAJaC,IAAMC,WCMZC,E,iLAJX,OAAO,8D,GAFUF,IAAMC,WC0CZE,E,YAzCb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAIRC,SAAW,SAAAC,GACT,IAAIC,EAAQ,EAAKC,MAAMD,MAAQ,EAC/B,EAAKE,cAAcF,IAPF,EAUnBG,WAAa,SAAAJ,GACX,IAAIC,EAAQ,EAAKC,MAAMD,MAAQ,EAC/B,EAAKE,cAAcF,IAVnB,EAAKC,MAAQ,CAAED,MAAO,GAFL,E,2EAeLA,GACZ,IAAII,EAAW,GACXJ,EAAQ,EACVI,EAAW,WACFJ,EAAQ,IACjBI,EAAW,YAEbC,KAAKC,SAAS,CAAEN,QAAOI,e,+BAIvB,IAAIG,EAAU,CAAC,QAASF,KAAKJ,MAAMG,UAAUI,KAAK,KAClD,OACE,6BAASC,UAAU,WACjB,uBAAGC,KAAK,IAAID,UAAU,cAAcE,QAASN,KAAKF,YAAlD,KAGA,0BAAMM,UAAWF,GAAUF,KAAKJ,MAAMD,OACtC,uBAAGU,KAAK,IAAID,UAAU,YAAYE,QAASN,KAAKP,UAAhD,U,GAlCcL,IAAMC,WCkBbkB,G,uLAVX,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANUpB,IAAMC,YCHlBoB,E,iLAEF,OAAO,kBAAC,EAAD,U,GAFQrB,IAAMC,WAMnBqB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,kBAAC,EAAD,MAAUJ,I","file":"static/js/main.242eb33f.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header>\n        <h1>Counters R Fun</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\n\nclass Footer extends React.Component {\n  render() {\n    return <footer>&copy; 2018 Code Fellows</footer>;\n  }\n}\n\nexport default Footer;\n","import React from 'react';\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { count: 0 };\n  }\n\n  handleUp = e => {\n    let count = this.state.count + 1;\n    this.updateCounter(count);\n  };\n\n  handleDown = e => {\n    let count = this.state.count - 1;\n    this.updateCounter(count);\n  };\n\n  updateCounter(count) {\n    let polarity = '';\n    if (count > 0) {\n      polarity = 'positive';\n    } else if (count < 0) {\n      polarity = 'negative';\n    }\n    this.setState({ count, polarity });\n  }\n\n  render() {\n    let classes = ['count', this.state.polarity].join(' ');\n    return (\n      <section className=\"counter\">\n        <a href=\"#\" className=\"downclicker\" onClick={this.handleDown}>\n          -\n        </a>\n        <span className={classes}>{this.state.count}</span>\n        <a href=\"#\" className=\"upclicker\" onClick={this.handleUp}>\n          +\n        </a>\n      </section>\n    );\n  }\n}\n\nexport default Counter;\n","import React from 'react';\n\nimport Header from './components/header/header.js';\nimport Footer from './components/footer/footer.js';\nimport Counter from './components/counter/counter.js';\n\nimport './components/counter/counter.scss'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <Counter />\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}